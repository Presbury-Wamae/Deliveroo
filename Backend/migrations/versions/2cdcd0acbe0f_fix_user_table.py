"""fix user table

Revision ID: 2cdcd0acbe0f
Revises: f0358287ca23
Create Date: 2025-07-23 16:26:57.040998

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2cdcd0acbe0f'
down_revision: Union[str, None] = 'f0358287ca23'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # Step 1: Add the new column as nullable
    op.add_column('admins', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('admins', sa.Column('last_name', sa.String(), nullable=True))

    # Step 2: Fill in default values for existing rows
    op.execute("UPDATE admins SET first_name = 'DefaultFirstName' WHERE first_name IS NULL")
    op.execute("UPDATE admins SET last_name = 'DefaultLastName' WHERE last_name IS NULL")

    # Step 3: Alter the column to set NOT NULL constraint
    op.alter_column('admins', 'first_name', nullable=False)
    op.alter_column('admins', 'last_name', nullable=False)

    # Remove old column
    op.drop_column('admins', 'name')



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.add_column('admins', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint('admins_name_key', 'admins', ['name'])
    op.drop_column('admins', 'last_name')
    op.drop_column('admins', 'first_name')
    # ### end Alembic commands ###
